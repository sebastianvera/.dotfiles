# https://rudra.dev/posts/a-mininal-tmux-configuration-from-scratch/
# https://waylonwalker.com/tmux-status-bar/

bind-key r source-file ~/.tmux.conf \; display-message "~/.tmux.conf reloaded"

# https://gist.github.com/bbqtd/a4ac060d6f6b9ea6fe3aabe735aa9d95
# https://gpanders.com/blog/the-definitive-guide-to-using-tmux-256color-on-macos/
set -g default-terminal "tmux-256color"

set -g base-index 1           # start indexing windows at 1 instead of 0
set -g detach-on-destroy off  # don't exit from tmux when closing a session
set -sg escape-time 10 # required by neovim https://github.com/neovim/neovim/wiki/FAQ
set -g history-limit 1000000

set -g base-index 1
set -g mouse on

bind-key | split-window -h -c "#{pane_current_path}"
bind-key - split-window -v -c "#{pane_current_path}"

bind-key -r H resize-pane -L 5
bind-key -r J resize-pane -D 5
bind-key -r K resize-pane -U 5
bind-key -r L resize-pane -R 5

#== Theme
thm_fg="#dadae8"
thm_gray="#332e41"
thm_blue="#a4b9ef"
thm_cyan="#c2e7f0"
thm_magenta="#c6aae8"
thm_orange="#f9c096"

#== Messages
set -g message-style fg="${thm_cyan}",bg="${thm_gray}",align="centre"
set -g message-command-style fg="${thm_cyan}",bg="${thm_gray}",align="centre"

#== Panes
set -g pane-border-style fg="${thm_gray}"
set -g pane-active-border-style fg="${thm_blue}"

#== Statusline
set -g status-position top
set -g status-justify left
set -g status-style bg=default,fg="${thm_fg}"

set -g status-right ""
set -g status-left-length 200
set -g status-left "[#[fg=${thm_magenta}]#S#[default]]"

# == Windows
# set the inactive window color and style
set -g window-status-style fg="${thm_gray}"
set -g window-status-format ' #I #W '

# set the active window color and style
set -g window-status-current-style fg="${thm_blue}",bg=default
set -g window-status-current-format ' #I #W '

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h'  'select-pane -L'
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j'  'select-pane -D'
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k'  'select-pane -U'
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l'  'select-pane -R'
tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"

bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R
bind-key -T copy-mode-vi 'C-\' select-pane -l
